import java.util.Calendar;
import java.text.DateFormatSymbols;
import java.util.Scanner;

public class Main {
    /*
     * Prints all the months in the specified year.
     * dayOfWeek specifies on which day of the week that January 1st should appear.
     */
    public static void printCal(int year, int dayOfWeek) {
        Calendar cal = Calendar.getInstance();
        cal.set(Calendar.YEAR, year);

        for (int i = 0; i < 12; i++) {

            // Print header
            String monthName = new DateFormatSymbols().getMonths()[i];
            System.out.printf("\n   %-12s%-12s\n", monthName, year);
            System.out.printf(" %-4s%-4s%-4s%-4s%-4s%-4s%-4s\n", "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat");

            // Print spaces before the 1st
            StringBuilder sb = new StringBuilder();
            for (int sp = 0; sp < dayOfWeek % 7; sp++) {
                sb.append("    ");
            }

            // Print days
            cal.set(Calendar.MONTH, i);
            int days = cal.getActualMaximum(Calendar.DAY_OF_MONTH);
            for (int j = 0; j < days; j++) {
                sb.append(String.format("%4d", j + 1));
                if (++dayOfWeek % 7 == 0) {
                    sb.append("\n");
                }
            }
            System.out.printf(sb.toString());
        }
        System.out.println();
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.print("Enter year as an integer: ");
        String yearStr = input.next();
        int yearNum = Integer.parseInt(yearStr);
        System.out.print("Enter day of week (0=Sunday...6=Sat):");
        String num2= input.next();
        int weekNum = Integer.parseInt(num2);
        printCal(yearNum, weekNum);
    }
}
